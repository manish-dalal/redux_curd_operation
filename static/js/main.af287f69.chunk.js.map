{"version":3,"sources":["assets/css/styles.scss","assets/css/styles-xs.scss","components/LoadingSpinner.jsx","redux/constants/ActionTypes.js","redux/actions/Item.js","containers/layouts/Layout.jsx","containers/Home.jsx","components/Input.jsx","containers/AddItem.jsx","containers/Root.jsx","utils/common.js","utils/APICaller.js","redux/sagas/getItem.js","redux/sagas/index.js","redux/reducer/loading.js","redux/reducer/items.js","redux/reducer/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","LoadingSpinner","props","width","height","colorFirst","colorSecond","strokeWidth","radiusFirst","radiusSecond","xmlns","viewBox","preserveAspectRatio","className","cx","cy","ng-attr-r","ng-attr-stroke-width","ng-attr-stroke","ng-attr-stroke-dasharray","fill","strokeLinecap","r","stroke","strokeDasharray","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","ng-attr-stroke-dashoffset","strokeDashoffset","ActionTypes","UPDATE_LOADING","GET_ITEMS","GET_ITEMS_SUCCESS","GET_ITEMS_FAILURE","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","ITEMS_FILTER_CHANGE","CLEAR_ITEMS_LIST","CLEAR_DONE_ITEMS","clearDoneItems","addItem","payload","updateItem","Layout","this","dispatch","loading","Fragment","children","React","Component","connect","state","loadingReducer","loadState","Home","handleNavigation","pathname","history","push","handleDone","item","done","handleClearAllDone","items","showClearTask","findIndex","Button","color","onClick","bind","length","Table","borderless","map","index","name","id","key","scope","Badge","pill","disabled","outline","size","itemsReducer","NewField","input","placeholder","label","FormGroup","Label","for","Input","now","Date","month","getMonth","nowDateString","getFullYear","toString","padStart","getDate","AddItem","onSubmit","event","initialValues","createdDate","currentDate","getTime","handleCancel","handleSubmit","pristine","submitting","invalid","Field","component","reduxForm","form","enableReinitialize","validate","errors","date","ownProps","get","Root","path","exact","to","api_response","options","params","routeParams","reqUrl","split","data","keyValue","Promise","resolve","reject","a","response","localStorage","getItem","setItem","JSON","stringify","parse","isEmpty","filter","toLowerCase","includes","content","getItems","root","select","filters","search","url","trim","call","APICaller","method","put","all","takeLatest","fork","initialState","action","itemsApiInProgress","totalItemCount","limit","skip","setItemsLocalStorage","rootReducer","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootsaga","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af287f69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#b22222\",\"themeBg\":\"#cfcfcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#b22222\",\"themeBg\":\"#cfcfcf\"};","import React from \"react\";\n\nexport const LoadingSpinner = props => {\n  const {\n    width = 150,\n    height = 150,\n    colorFirst = \"#1d3f72\",\n    colorSecond = \"#5699d2\",\n    strokeWidth = 4,\n    radiusFirst = 40,\n    radiusSecond = 35\n  } = props;\n  return (\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      className=\"lds-double-ring\"\n    >\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c1}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusFirst}\n        strokeWidth={strokeWidth}\n        stroke={colorFirst}\n        strokeDasharray=\"62.83185307179586 62.83185307179586\"\n        transform=\"rotate(199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius2}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c2}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray2}}\"\n        ng-attr-stroke-dashoffset=\"{{config.dashoffset2}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusSecond}\n        strokeWidth={strokeWidth}\n        stroke={colorSecond}\n        strokeDasharray=\"54.97787143782138 54.97787143782138\"\n        strokeDashoffset=\"54.97787143782138\"\n        transform=\"rotate(-199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;-360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n};\n\nexport default LoadingSpinner;\n","const ActionTypes = {\n  UPDATE_LOADING: 'UPDATE_LOADING',\n  GET_ITEMS: 'GET_ITEMS',\n  GET_ITEMS_SUCCESS: 'GET_ITEMS_SUCCESS',\n  GET_ITEMS_FAILURE: 'GET_ITEMS_FAILURE',\n  ADD_ITEM: 'ADD_ITEM',\n  UPDATE_ITEM: 'UPDATE_ITEM',\n  DELETE_ITEM: 'DELETE_ITEM',\n  ITEMS_FILTER_CHANGE: 'ITEMS_FILTER_CHANGE',\n  CLEAR_ITEMS_LIST: 'CLEAR_ITEMS_LIST',\n  CLEAR_DONE_ITEMS: 'CLEAR_DONE_ITEMS'\n}\n\nexport default ActionTypes\n","import ActionTypes from '../constants/ActionTypes'\n\nexport const getItems = () => {\n  return {\n    type: ActionTypes.GET_ITEMS\n  }\n}\n\nexport const clearItems = () => {\n  return {\n    type: ActionTypes.CLEAR_ITEMS_LIST\n  }\n}\n\nexport const clearDoneItems = () => {\n  return {\n    type: ActionTypes.CLEAR_DONE_ITEMS\n  }\n}\n\nexport const itemsFilterChange = payload => ({\n  type: ActionTypes.ITEMS_FILTER_CHANGE,\n  payload\n})\n\nexport const addItem = payload => ({\n  type: ActionTypes.ADD_ITEM,\n  payload\n})\n\nexport const updateItem = payload => ({\n  type: ActionTypes.UPDATE_ITEM,\n  payload\n})\n\nexport const deleteItem = payload => ({\n  type: ActionTypes.DELETE_ITEM,\n  payload\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { getItems } from 'redux/actions/Item'\n\nclass Layout extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getItems())\n  }\n  render() {\n    const { loading } = this.props\n    return (\n      <React.Fragment>\n        <div className=\"fixed-body\"></div>\n        {loading && (\n          <div className=\"loading\">\n            <LoadingSpinner />\n          </div>\n        )}\n        <div className=\"Layout\">{this.props.children}</div>\n      </React.Fragment>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.loadingReducer.loadState\n  }\n}\nexport default connect(mapStateToProps)(Layout)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport findIndex from 'lodash/findIndex'\nimport { Button, Table, Badge } from 'reactstrap'\n\nimport { updateItem, clearDoneItems } from 'redux/actions/Item'\n\nclass Home extends Component {\n  handleNavigation = (pathname, state) => {\n    this.props.history.push({ pathname, state })\n  }\n  handleDone = item => {\n    const { dispatch } = this.props\n    dispatch(updateItem({ ...item, done: true }))\n  }\n  handleClearAllDone = () => {\n    const { dispatch } = this.props\n    dispatch(clearDoneItems())\n  }\n  render() {\n    const { items } = this.props\n    let showClearTask = findIndex(items, ['done', true]) !== -1\n    return (\n      <div className=\"Home Card_container\">\n        <div className=\"Home_header\">\n          <Button color=\"primary\" onClick={this.handleNavigation.bind(this, '/add-task', {})}>\n            ADD TASK\n          </Button>\n          {showClearTask ? (\n            <div className=\"Home_clear\" onClick={this.handleClearAllDone}>\n              Clear all the done tasks\n            </div>\n          ) : (\n            void 0\n          )}\n        </div>\n        <hr className=\"marginPadding\" />\n        <div className=\"Home_body\">\n          {items.length ? (\n            <Table borderless>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th className=\"task_name\">Task Name</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {items.map((item, index) => {\n                  const { name, done, id } = item\n                  return (\n                    <tr key={id}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td className=\"task_name\">{name}</td>\n                      <td>\n                        <Badge color={done ? 'info' : 'danger'} pill>\n                          {done ? 'Done' : 'Undone'}\n                        </Badge>\n                      </td>\n                      <td>\n                        <div>\n                          <Button\n                            disabled={done}\n                            outline\n                            color=\"primary\"\n                            size=\"sm\"\n                            onClick={this.handleNavigation.bind(this, '/add-task', item)}>\n                            Edit\n                          </Button>{' '}\n                          {!done ? (\n                            <Button outline color=\"primary\" size=\"sm\" onClick={this.handleDone.bind(this, item)}>\n                              Done\n                            </Button>\n                          ) : (\n                            void 0\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </Table>\n          ) : (\n            <div>No task added</div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsReducer.items\n  }\n}\nexport default connect(mapStateToProps)(Home)\n","import React from 'react'\nimport { FormGroup, Input, Label } from 'reactstrap'\n\n// input component\nconst NewField = ({ input, type, placeholder, id, label }) => {\n  return (\n    <FormGroup>\n      {label ? <Label for={label}>{label}</Label> : void 0}\n      <Input {...input} type={type} id={id} placeholder={placeholder} />\n    </FormGroup>\n  )\n}\nexport default NewField\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport { reduxForm, Field } from 'redux-form'\nimport { connect } from 'react-redux'\nimport get from 'lodash/get'\n\nimport { addItem, updateItem } from 'redux/actions/Item'\nimport NewField from 'components/Input'\n\n// get current date\nconst now = new Date()\nconst month = now.getMonth() + 1\nconst nowDateString = `${now.getFullYear()}-${month.toString().padStart(2, '0')}-${now\n  .getDate()\n  .toString()\n  .padStart(2, '0')}`\n\nclass AddItem extends React.Component {\n  onSubmit = event => {\n    const { dispatch, initialValues, history } = this.props\n    const { id = '', done = false } = initialValues\n    const { name = '', createdDate = '' } = event\n    let currentDate = new Date()\n    if (id) {\n      dispatch(updateItem({ id, createdDate, name, done }))\n    } else {\n      let id = currentDate.getTime()\n      dispatch(addItem({ id, createdDate, name, done }))\n    }\n    history.push('/home')\n  }\n  handleCancel = () => {\n    this.props.history.push('/home')\n  }\n  render() {\n    const { handleSubmit, pristine, submitting, invalid } = this.props\n\n    return (\n      <div className=\"AddItem Card_container\">\n        <form onSubmit={handleSubmit(this.onSubmit)}>\n          <div className=\"AddItem_body\">\n            <Field\n              label=\"Task Name\"\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Enter task name\"\n              component={NewField}\n            />\n\n            <div className=\"AddItem_date\">\n              <Field\n                label=\"Create Date\"\n                type=\"date\"\n                id=\"createdDate\"\n                name=\"createdDate\"\n                placeholder=\"Date\"\n                component={NewField}\n              />\n            </div>\n          </div>\n\n          <hr className=\"marginPadding\" />\n          <div className=\"footer_btn\">\n            <Button outline color=\"secondary\" onClick={this.handleCancel}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\" disabled={invalid || submitting || pristine}>\n              Create\n            </Button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n// validate input redux form\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Required'\n  }\n  if (!values.date) {\n    errors.date = 'Required'\n  }\n  return errors\n}\n\nAddItem = reduxForm({\n  form: 'AddSpech',\n  enableReinitialize: true,\n  validate\n})(AddItem)\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    initialValues: { createdDate: nowDateString, ...get(ownProps, 'location.state', {}) }\n  }\n}\nexport default connect(mapStateToProps)(AddItem)\n","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\n\nimport Layout from './layouts/Layout'\nimport Home from './Home'\nimport AddItem from 'containers/AddItem'\n\nconst Root = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/add-task\" exact component={AddItem} />\n\n        <Redirect to=\"/home\" />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default Root\n","export const api_response = []\n\nexport const months = [\n  {\n    abbreviation: 'Jan',\n    name: 'January'\n  },\n  {\n    abbreviation: 'Feb',\n    name: 'February'\n  },\n  {\n    abbreviation: 'Mar',\n    name: 'March'\n  },\n  {\n    abbreviation: 'Apr',\n    name: 'April'\n  },\n  {\n    abbreviation: 'May',\n    name: 'May'\n  },\n  {\n    abbreviation: 'Jun',\n    name: 'June'\n  },\n  {\n    abbreviation: 'Jul',\n    name: 'July'\n  },\n  {\n    abbreviation: 'Aug',\n    name: 'August'\n  },\n  {\n    abbreviation: 'Sep',\n    name: 'September'\n  },\n  {\n    abbreviation: 'Oct',\n    name: 'October'\n  },\n  {\n    abbreviation: 'Nov',\n    name: 'November'\n  },\n  {\n    abbreviation: 'Dec',\n    name: 'December'\n  }\n]\n","import { api_response } from './common'\nimport isEmpty from 'lodash/isEmpty'\n\nexport default options => {\n  let params = {}\n  // get url params\n  const routeParams = options.reqUrl.split('?')\n  if (routeParams.length > 1) {\n    let paramsStr = routeParams[1]\n    paramsStr.split('&').map(data => {\n      let keyValue = data.split('=')\n      params[keyValue[0]] = keyValue[1] ? keyValue[1] : ''\n      return ''\n    })\n  }\n\n  return new Promise(async (resolve, reject) => {\n    let response = localStorage.getItem('items')\n    if (response === null) {\n      response = api_response\n      localStorage.setItem('items', JSON.stringify(response))\n    } else {\n      response = JSON.parse(response)\n    }\n\n    if (response.length) {\n      if (!isEmpty(params.name)) {\n        response = response.filter(item => item['authorName'].toLowerCase().includes(params.name.toLowerCase()))\n      }\n      return resolve({\n        data: {\n          content: response\n        }\n      })\n    } else {\n      return reject({})\n    }\n  })\n}\n","import { all, call, put, takeLatest, select } from 'redux-saga/effects'\nimport ActionTypes from '../constants/ActionTypes'\nimport APICaller from 'utils/APICaller'\n\nexport function* getItems() {\n  const filters = yield select(state => state.itemsReducer.filters)\n  let { search = '' } = filters\n  let url = 'posts'\n  if (search.length) {\n    search = search.trim().toLowerCase()\n    url = `?${url}&name=${search}`\n  }\n  try {\n    const response = yield call(APICaller, { method: 'GET', reqUrl: url })\n    yield put({\n      type: ActionTypes.GET_ITEMS_SUCCESS,\n      payload: response.data\n    })\n  } catch (err) {\n    yield put({\n      type: ActionTypes.GET_ITEMS_FAILURE,\n      payload: []\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([takeLatest(ActionTypes.GET_ITEMS, getItems)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\n// import user from \"./user\";\nimport getItems from './getItem'\n\nexport default function* root() {\n  yield all([fork(getItems)])\n}\n","import ActionTypes from '../constants/ActionTypes'\n\nconst initialState = { loadState: false }\nconst loadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOADING:\n      return { loadState: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default loadingReducer\n","import ActionTypes from '../constants/ActionTypes'\nimport findIndex from 'lodash/findIndex'\n\nconst initialState = {\n  items: [],\n  itemsApiInProgress: false,\n  totalItemCount: 1,\n  filters: {\n    search: '',\n    limit: 20,\n    skip: 0\n  }\n}\n\nconst setItemsLocalStorage = items => {\n  localStorage.setItem('items', JSON.stringify(items))\n}\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_ITEMS:\n      return { ...state, itemsApiInProgress: true }\n    case ActionTypes.GET_ITEMS_FAILURE:\n      return { ...state, itemsApiInProgress: false }\n    case ActionTypes.GET_ITEMS_SUCCESS:\n      return {\n        ...state,\n        items: [...state.items, ...action.payload.content],\n        itemsApiInProgress: false,\n        filters: {\n          ...state.filters,\n          skip: state.filters.skip + state.filters.limit\n        }\n      }\n    case ActionTypes.UPDATE_ITEM: {\n      const items = [...state.items],\n        index = findIndex(state.items, item => item.id === action.payload.id)\n      if (index !== -1) {\n        items[index] = action.payload\n        setItemsLocalStorage(items)\n      }\n      return {\n        ...state,\n        items: items\n      }\n    }\n    case ActionTypes.CLEAR_DONE_ITEMS: {\n      const items = state.items.filter(item => !item.done)\n      setItemsLocalStorage(items)\n      return {\n        ...state,\n        items: items\n      }\n    }\n\n    case ActionTypes.ADD_ITEM: {\n      const items = [action.payload, ...state.items]\n      setItemsLocalStorage(items)\n      return {\n        ...state,\n        items\n      }\n    }\n    case ActionTypes.DELETE_ITEM: {\n      const items = state.items.filter(item => item.id !== action.payload.id)\n      setItemsLocalStorage(items)\n      return {\n        ...state,\n        items\n      }\n    }\n    case ActionTypes.CLEAR_ITEMS_LIST:\n      return { ...state, items: [] }\n    case ActionTypes.ITEMS_FILTER_CHANGE: {\n      return { ...state, filters: { ...state.filters, ...action.payload } }\n    }\n    default:\n      return state\n  }\n}\n\nexport default itemsReducer\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport loadingReducer from './loading'\nimport itemsReducer from './items'\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  itemsReducer,\n  form: formReducer\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootsaga from './sagas'\nimport rootReducer from './reducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst sagaMiddleware = createSagaMiddleware()\n// create store\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\n/* eslint-enable */\n\nsagaMiddleware.run(rootsaga)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './assets/css/styles.scss'\nimport './assets/css/styles-xs.scss'\n\nimport App from './containers/Root'\nimport store from './redux/store'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}